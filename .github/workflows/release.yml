name: Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  release-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${{ github.workspace }}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --with dev

      - name: Build standalone application
        run: poetry run python build.py

      - name: Zip executable
        run: zip -r archive-downloader-linux.zip dist/*

      - name: Configure git for semantic-release
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Verify GitHub token
        run: echo "GITHUB_TOKEN is set"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List Tags
        run: git tag

      - name: Run semantic release
        id: release
        run: |
          poetry run semantic-release publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
          DEBUG: semantic-release:*

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: archive-downloader-linux.zip
          asset_name: archive-downloader-linux.zip
          asset_content_type: application/zip

  release-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${{ github.workspace }}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --with dev

      - name: Build standalone application
        run: poetry run python build.py

      - name: Zip executable
        run: zip -r archive-downloader-macos.zip dist/*

      - name: Configure git for semantic-release
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Verify GitHub token
        run: echo "GITHUB_TOKEN is set"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List Tags
        run: git tag

      - name: Run semantic release
        id: release
        run: |
          poetry run semantic-release publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
          DEBUG: semantic-release:*

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: archive-downloader-macos.zip
          asset_name: archive-downloader-macos.zip
          asset_content_type: application/zip

  release-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Build standalone application
        run: |
          poetry run python build.py

      - name: Zip executable
        run: |
          powershell -Command "Compress-Archive -Path 'dist/*' -DestinationPath 'archive-downloader-windows.zip'"

      - name: Configure git for semantic-release
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Verify GitHub token
        run: echo "GITHUB_TOKEN is set"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List Tags
        run: git tag

      - name: Run semantic release
        id: release
        run: |
          poetry run semantic-release publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
          DEBUG: semantic-release:*

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: archive-downloader-windows.zip
          asset_name: archive-downloader-windows.zip
          asset_content_type: application/zip
