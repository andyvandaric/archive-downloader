name: Release

on:
  push:
    branches:
      - main # atau branch utama Anda

jobs:
  release-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12" # Sesuaikan dengan versi Python Anda

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${{ github.workspace }}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install # Menginstal dependensi yang didefinisikan di pyproject.toml

      - name: Build standalone application
        run: poetry run python build.py # Menjalankan skrip build

      - name: Zip executable
        run: zip -r archive-downloader-linux.zip dist/* # Mengompresi file executable ke ZIP

      - name: Run semantic release
        id: release
        run: |
          poetry run semantic-release publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token untuk mengakses GitHub

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }} # URL untuk mengunggah ke rilis
          asset_path: archive-downloader-linux.zip # Path ke file ZIP
          asset_name: archive-downloader-linux.zip # Nama file yang diunggah
          asset_content_type: application/zip # Tipe konten

  release-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12" # Sesuaikan dengan versi Python Anda

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${{ github.workspace }}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install # Menginstal dependensi yang didefinisikan di pyproject.toml

      - name: Build standalone application
        run: poetry run python build.py # Menjalankan skrip build

      - name: Zip executable
        run: zip -r archive-downloader-macos.zip dist/* # Mengompresi file executable ke ZIP

      - name: Run semantic release
        id: release
        run: |
          poetry run semantic-release publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token untuk mengakses GitHub

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }} # URL untuk mengunggah ke rilis
          asset_path: archive-downloader-macos.zip # Path ke file ZIP
          asset_name: archive-downloader-macos.zip # Nama file yang diunggah
          asset_content_type: application/zip # Tipe konten

  release-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12" # Sesuaikan dengan versi Python Anda

      - name: Install Poetry
        run: |
          (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
          $env:PATH += ";$env:USERPROFILE\.local\bin"  # Tambahkan Poetry ke PATH

      - name: Install dependencies
        run: |
          poetry install

      - name: Build standalone application
        run: |
          python build.py  # Menjalankan skrip build

      - name: Zip executable
        run: |
          powershell -Command "Compress-Archive -Path 'dist/*' -DestinationPath 'archive-downloader-windows.zip'"  # Mengompresi file executable ke ZIP

      - name: Run semantic release
        id: release
        run: |
          poetry run semantic-release publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token untuk mengakses GitHub

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }} # URL untuk mengunggah ke rilis
          asset_path: archive-downloader-windows.zip # Path ke file ZIP
          asset_name: archive-downloader-windows.zip # Nama file yang diunggah
          asset_content_type: application/zip # Tipe konten

